var iod = require('./index')
var request = require('request')

var apikey = '6ee6cbee-f94b-4688-a697-259fd8545d94'
var host = 'http://api.idolondemand.com'
var port = 80

//var IOD = new iod(apikey, host, port)
//
//var IODOpts = {
//	action: 'analyzesentiment',
//	params: {
//		text: '=)'
//	},
//	callback: {
//		uri: 'http://unknown_host'
//	}
//}
//
//IOD.async(IODOpts, function(err, res) {
//	console.log('ERR: ', err)
//	console.log('RES: ', res)
//})
//
//IOD.async(IODOpts, function(err, res) {
//	console.log('ERR: ', err)
//	console.log('RES: ', res)
//})
//
//IOD.eventEmitter.on('CbError', function(err) {
//	console.log("CBERR: ", err)
//})

//var express = require('express')
//var bodyParser = require('body-parser')
//var multer = require('multer')
//
//var app = express()
//app.use(bodyParser.json())
//app.use(bodyParser.urlencoded({ extended: true }))
//app.use(multer())
//
//app.post('/', function(req, res) {
//	console.log('REQ: ', req.body)
//})
//
//var server = app.listen(3333)
//setTimeout(function() {
//	console.log('CLOSING')
//	server.close()
//}, 10000)

var iod = require('./index')

var multer = require('multer')
var express = require('express')
var bodyParser = require('body-parser')
var listenAndClose = function(IOD, callback) {
	var listener = function(err) {
		server.close()
		callback(err)
	}

	var app = express()
	app.use(bodyParser.json())
	app.use(bodyParser.urlencoded({ extended: true }))
	app.use(multer())
	app.post('/', function(req, res) {
		res.send('Hello world!')
		server.close()
		IOD.eventEmitter.removeListener('CbError', listener)
		callback(null, JSON.parse(req.body.results))
	})
	var server = app.listen(3333)

	IOD.eventEmitter.once('CbError', listener)
}

var jobID = 'usw3p_93d40cbe-dbeb-4d8c-a31d-52058f4d497c'

var IOD = new iod(apikey)
var IODOpts = {
	action: 'connectorstatus',
	params: {
		connector: 'testconnector'
	},
	errorCodes: [4006]
}

//IOD.async(IODOpts, function(err, res) {
//	console.log('ERR: ', err)
//	console.log('RES: ', res)
//})

var IODOpts = {
	action: 'parameterSchema',
	params: {},
	errorCodes: [4006]
}
IOD.discovery(IODOpts, function(err, res) {
	console.log('ERR: ', err)
	console.log('RES: ', JSON.stringify(res, null, 2))
})


